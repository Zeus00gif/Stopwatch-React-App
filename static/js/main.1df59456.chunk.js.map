{"version":3,"sources":["reportWebVitals.js","components/Timer.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Timer","test2","useState","seconds","setSeconds","minutes","setminutes","timerRef","useRef","start","setStart","stop","setStop","restart","setRestart","testArray","setTestArray","count","index","length","min","sec","map","value","className","onClick","i","arr","val","handleDelete","toFixed","current","setInterval","clearInterval","prev","ReactDOM","render","document","getElementById"],"mappings":"4LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,0BCiICQ,MApIf,WA8CE,IA9CgB,IAQZC,EARW,EACaC,mBAAS,GADtB,mBACVC,EADU,KACDC,EADC,OAEaF,mBAAS,GAFtB,mBAEVG,EAFU,KAEDC,EAFC,KAGTC,EAAWC,iBAAO,MAHT,EAISN,oBAAS,GAJlB,mBAIVO,EAJU,KAIHC,EAJG,OAKOR,oBAAS,GALhB,mBAKVS,EALU,KAKJC,EALI,OAMaV,oBAAS,GANtB,mBAMVW,EANU,KAMDC,EANC,OAOiBZ,mBAAS,IAP1B,mBAOVa,EAPU,KAOCC,EAPD,KASXC,EAAM,EAqCDC,EAAQ,EAAGA,EAAQH,EAAUI,OAAQD,IAClB,KAAvBH,EAAUG,GAAOE,KAAiC,KAAvBL,EAAUG,GAAOG,MAC3CJ,EAAM,GAsBZ,OAnBAhB,EAAQc,EAAUO,KAAI,SAACC,EAAOL,GAAR,OACpB,8BAA8B,KAAZK,EAAMH,KAAsB,KAAZG,EAAMF,KACxC,sBAAMG,UAAU,OAAhB,UACE,qBAAKA,UAAU,yCAAf,SACE,iCACGD,EAAMH,IADT,IACeG,EAAMF,SAGvB,qBAAKG,UAAU,qBAAf,SACE,wBACEA,UAAU,gCACVC,QAAS,kBApBjB,SAAsBC,GACpB,IAAMC,EAAKZ,EAAUO,KAAI,SAACM,EAAIV,GAAL,OAAaA,IAAQQ,EAAE,CAACN,IAAI,GAAGC,IAAI,IAAIO,KAChEZ,EAAaW,GAkBME,CAAaX,IAF5B,0BARMA,MAmBV,qBAAKM,UAAU,gBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,sBAAKA,UAAU,UAAf,UACE,sBACEA,UACEP,EAAQ,EACJ,2CACA,uCAJR,UAOE,qBAAKO,UAAU,gBAAf,SACE,iCACGrB,EAAU,GACPE,EACAC,GAAW,SAACD,GAAD,OAAaA,EAAU,KAHxC,IAIIF,EAAU,GAAKA,EAAQ2B,QAAQ,GAAK1B,EAAW,QAGrD,gCACGK,GACC,wBACEe,UACEf,GAASI,EACL,2CACA,uCAENY,QAxFlB,WACEf,GAAS,GACTE,GAAQ,GACRE,GAAW,GACXP,EAASwB,QAAUC,aAAY,WAC7B5B,GAAW,SAACD,GACV,OAAOA,EAAU,QAElB,MA0EW,mBAWDQ,GACC,wBACEa,UAAU,sCACVC,QAtFlB,WACEQ,cAAc1B,EAASwB,SACvBrB,GAAS,GACTE,GAAQ,GACRE,GAAW,GACXE,GACE,SAACkB,GAAD,OACGnB,EAAS,sBAAOmB,GAAP,CAAa,CAAEd,IAAKf,EAASgB,IAAKlB,EAAQ2B,QAAQ,UA6ElD,kBAODjB,GACC,wBACEW,UAAU,yCACVC,QApFlB,WACEQ,cAAc1B,EAASwB,SACvBrB,GAAS,GACTE,GAAQ,GACRE,GAAW,GACXV,EAAW,GACXE,EAAW,GACXU,GACE,SAACkB,GAAD,OACGnB,EAAS,sBAAOmB,GAAP,CAAa,CAAEd,IAAKf,EAASgB,IAAKlB,EAAQ2B,QAAQ,UAyElD,2BASLb,EAAM,GACL,qBAAKO,UAAU,0BAAf,SACE,qBAAKA,UAAU,iBAAf,SAAiCvB,gBCzHjDkC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,SAClD/C,M","file":"static/js/main.1df59456.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useRef, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Timer.css\";\r\n\r\nfunction Timer() {\r\n  let [seconds, setSeconds] = useState(0.0);\r\n  let [minutes, setminutes] = useState(0);\r\n  const timerRef = useRef(null);\r\n  let [start, setStart] = useState(true);\r\n  let [stop, setStop] = useState(false);\r\n  let [restart, setRestart] = useState(false);\r\n  let [testArray, setTestArray] = useState([]);\r\n  let test2;\r\n  let count=0;\r\n  function handleStart() {\r\n    setStart(false);\r\n    setStop(true);\r\n    setRestart(true);\r\n    timerRef.current = setInterval(() => {\r\n      setSeconds((seconds) => {\r\n        return seconds + 0.1;\r\n      });\r\n    }, 100);\r\n  }\r\n  function handleStop() {\r\n    clearInterval(timerRef.current);\r\n    setStart(true);\r\n    setStop(false);\r\n    setRestart(true);\r\n    setTestArray(\r\n      (prev) =>\r\n        (testArray = [...prev, { min: minutes, sec: seconds.toFixed(2) }])\r\n    );\r\n  }\r\n  function handleRestart() {\r\n    clearInterval(timerRef.current);\r\n    setStart(true);\r\n    setStop(false);\r\n    setRestart(false);\r\n    setSeconds(0);\r\n    setminutes(0);\r\n    setTestArray(\r\n      (prev) =>\r\n        (testArray = [...prev, { min: minutes, sec: seconds.toFixed(2) }])\r\n    );\r\n  }\r\n  function handleDelete(i) {\r\n    const arr= testArray.map((val,index)=>index===i?{min:\"\",sec:\"\"}:val);\r\n    setTestArray(arr);\r\n  }\r\n  for (let index = 0; index < testArray.length; index++) {\r\n    if(testArray[index].min!==\"\"&&testArray[index].sec!==\"\"){\r\n        count=1;\r\n    }      \r\n  }\r\n  test2 = testArray.map((value, index) => (\r\n    <div key={index}>{value.min!==\"\"&&value.sec!==\"\"&&\r\n    <div  className=\"row \">\r\n      <div className=\"col-md-10 col-8 p-1 text-center values\">\r\n        <span >\r\n          {value.min}:{value.sec}\r\n        </span>\r\n      </div>\r\n      <div className=\"col-md-2 col-4 p-1\">\r\n        <button\r\n          className=\"btn btn-info w-100 rembtn p-3\"\r\n          onClick={()=>handleDelete(index)}\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n    </div>}\r\n    </div>\r\n  ));\r\n  return (\r\n    <div className=\"container p-2\">\r\n      <div className=\"row  border mt-4\">\r\n        <div className=\"col-12 bg-dark text-light\">\r\n          <div className=\"row p-2\">\r\n            <div\r\n              className={\r\n                count > 0\r\n                  ? \"col-12 p-2 mb-1 text-center halfcolstyle\"\r\n                  : \"col-12 p-2 mb-1 text-center colstyle\"\r\n              }\r\n            >\r\n              <div className=\"timerShow p-2\">\r\n                <span>\r\n                  {seconds < 60\r\n                    ? minutes\r\n                    : setminutes((minutes) => minutes + 1)}\r\n                  :{seconds < 60 ? seconds.toFixed(2) : setSeconds(0)}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                {start && (\r\n                  <button\r\n                    className={\r\n                      start && restart\r\n                        ? \"btn btn-md btn-light mt-2 mb-2 halfstart\"\r\n                        : \"btn btn-md btn-light mt-2 mb-2 start\"\r\n                    }\r\n                    onClick={handleStart}\r\n                  >\r\n                    Start\r\n                  </button>\r\n                )}\r\n                {stop && (\r\n                  <button\r\n                    className=\"btn btn-md btn-light mt-2 mb-2 stop\"\r\n                    onClick={handleStop}\r\n                  >\r\n                    Stop\r\n                  </button>\r\n                )}\r\n                {restart && (\r\n                  <button\r\n                    className=\"btn btn-md btn-light mt-2 mb-2 restart\"\r\n                    onClick={handleRestart}\r\n                  >\r\n                    Restart\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {count>0 && (\r\n              <div className=\"col-12 p-4  delcolstyle\">\r\n                <div className=\"recordedValues\">{test2}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Timer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Timer from './components/Timer';\n\nReactDOM.render(<Timer />,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}